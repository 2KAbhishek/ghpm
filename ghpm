#!/bin/bash
echo -e "\u001b[32;1m ghpm - GitHub Project Manager \u001b[0m"
echo

projectdir=$1
cd "$projectdir" || exit


function clone_repos
{
    echo -e " \u001b[37;1m\u001b[4m Enter GitHub Username:\u001b[0m"
    echo -en "\u001b[32;1m ==> \u001b[0m"
    read -r username
    echo -e "\u001b[7m Cloning repos of $username@github \u001b[0m"
    curl -s https://api.github.com/users/"$username"/repos?per_page=100 |jq -r ".[].html_url" | xargs -L1 git clone
}

function update_repos
{
# Let the person running the script know what's going on.
echo -e "\n\033[1m  Updating all repositories ($update) \033[0m\n"

# Find all git repositories and update it to the master latest revision
for i in $(find . -name ".git" | cut -c 3-); do
    echo ;
    echo -e "\033[33m $i \033[0m";

    # We have to go to the .git parent directory to call the pull command
    cd "$i" || return;
    cd ..;

    git "$update";

    cd "$projectdir" || return
done

echo -e "\n\033[32m Complete! \033[0m\n"
}

while true
do

echo -e " \u001b[37;1m\u001b[4m Select an option:\u001b[0m"

echo -e "  \u001b[34;1m (1) Clone repos \u001b[0m"
echo -e "  \u001b[34;1m (2) Pull changes \u001b[0m"
echo -e "  \u001b[34;1m (3) Push changes \u001b[0m"

echo -e "  \u001b[31;1m (0) Exit \u001b[0m"

echo -en "\u001b[32;1m ==> \u001b[0m"

read -r option

case $option in

"1")
    clone_repos
    echo
    read -r
    ;;

"2")
    update=pull
    update_repos
    echo
    read -r
    ;;

"3")
    update=push
    update_repos
    echo
    read -r
    ;;

"0")
    echo -e "\u001b[32;1m Bye! \u001b[0m"
    exit 0
    ;;

*)
    echo -e "\u001b[31;1m Invalid option entered! \u001b[0m"
    exit 1
    ;;

esac

done
